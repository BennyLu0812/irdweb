
package com.ird.portal.be.ws;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;

/**
 * This class was generated by Apache CXF 3.0.16
 * 2021-03-16T11:35:24.874+08:00
 * Generated source version: 3.0.16
 * 
 */
public final class BEService_Port1_Client {

    private static final QName SERVICE_NAME = new QName("urn:dsat.gov.mo:be/ws", "BEService");

    private static final Logger logger = LoggerFactory.getLogger(BEService_Port1_Client.class);

    private BEService_Port1_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = BEService_Service.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                logger.error("wsdlFile >>>>>>>>>",e);
            }
        }
      
        BEService_Service ss = new BEService_Service(wsdlURL, SERVICE_NAME);
        BEService port = ss.getPort1();  
        
        {
        System.out.println("Invoking getInterDrivingLicRecord...");
        long _getInterDrivingLicRecord_docId = 0;
        java.util.List<InterDrivingLicRecord> _getInterDrivingLicRecord__return = port.getInterDrivingLicRecord(_getInterDrivingLicRecord_docId);
        System.out.println("getInterDrivingLicRecord.result=" + _getInterDrivingLicRecord__return);


        }
        {
        System.out.println("Invoking genInternationalLic...");
        InternationalLicParam _genInternationalLic_internationalLicParam = null;
        InternationalLicenseData _genInternationalLic__return = port.genInternationalLic(_genInternationalLic_internationalLicParam);
        System.out.println("genInternationalLic.result=" + _genInternationalLic__return);


        }
        {
        System.out.println("Invoking updateInterDrivingLicRecordDocId...");
        long _updateInterDrivingLicRecordDocId_oldDocId = 0;
        long _updateInterDrivingLicRecordDocId_newDocId = 0;
        String _updateInterDrivingLicRecordDocId_uid = "";
        boolean _updateInterDrivingLicRecordDocId__return = port.updateInterDrivingLicRecordDocId(_updateInterDrivingLicRecordDocId_oldDocId, _updateInterDrivingLicRecordDocId_newDocId, _updateInterDrivingLicRecordDocId_uid);
        System.out.println("updateInterDrivingLicRecordDocId.result=" + _updateInterDrivingLicRecordDocId__return);


        }
        {
        System.out.println("Invoking getTPMSCertInfo...");
        long _getTPMSCertInfo_docId = 0;
        String _getTPMSCertInfo_status = "";
        java.util.List<TaxiDrivingLicense> _getTPMSCertInfo__return = port.getTPMSCertInfo(_getTPMSCertInfo_docId, _getTPMSCertInfo_status);
        System.out.println("getTPMSCertInfo.result=" + _getTPMSCertInfo__return);


        }
        {
        System.out.println("Invoking createInterLicApplicant...");
        InterLicAppReq _createInterLicApplicant_interLicAppReq = null;
        InterLicAppRtn _createInterLicApplicant__return = port.createInterLicApplicant(_createInterLicApplicant_interLicAppReq);
        System.out.println("createInterLicApplicant.result=" + _createInterLicApplicant__return);


        }

        System.exit(0);
    }

}
