package com.ird.portal.be.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.0.16
 * 2021-03-16T11:35:25.035+08:00
 * Generated source version: 3.0.16
 * 
 */
@WebService(targetNamespace = "urn:dsat.gov.mo:be/ws", name = "BEService")
@XmlSeeAlso({ObjectFactory.class})
public interface BEService {

    /**
     * Get the International Driving License Record from
     * 				the System.
     * 				If the requesting record doesn't present, an Exception
     * 				with
     * 				message
     * 				'record.not.found' will be thrown.
     * 			
     */
    @WebMethod(action = "urn:dsat.gov.mo:be/ws/getInterDrivingLicRecord")
    @RequestWrapper(localName = "getInterDrivingLicRecord", targetNamespace = "urn:dsat.gov.mo:be/ws", className = "GetInterDrivingLicRecord")
    @ResponseWrapper(localName = "getInterDrivingLicRecordResponse", targetNamespace = "urn:dsat.gov.mo:be/ws", className = "GetInterDrivingLicRecordResponse")
    @WebResult(name = "record", targetNamespace = "")
    public java.util.List<InterDrivingLicRecord> getInterDrivingLicRecord(
            @WebParam(name = "docId", targetNamespace = "")
                    long docId
    );

    /**
     * Create international license.
     * 			
     */
    @WebMethod(action = "urn:dsat.gov.mo:be/ws/genInternationalLic")
    @RequestWrapper(localName = "genInternationalLic", targetNamespace = "urn:dsat.gov.mo:be/ws", className = "GenInternationalLic")
    @ResponseWrapper(localName = "genInternationalLicResponse", targetNamespace = "urn:dsat.gov.mo:be/ws", className = "GenInternationalLicResponse")
    @WebResult(name = "internationalLicData", targetNamespace = "")
    public InternationalLicenseData genInternationalLic(
            @WebParam(name = "internationalLicParam", targetNamespace = "")
                    InternationalLicParam internationalLicParam
    );

    /**
     * Get the TPMS Cert Information from the TPMS-BE
     * 				System.
     * 			
     */
    @WebMethod(action = "urn:dsat.gov.mo:be/ws/updateInterDrivingLicRecordDocId")
    @RequestWrapper(localName = "updateInterDrivingLicRecordDocId", targetNamespace = "urn:dsat.gov.mo:be/ws", className = "UpdateInterDrivingLicRecordDocId")
    @ResponseWrapper(localName = "updateInterDrivingLicRecordDocIdResponse", targetNamespace = "urn:dsat.gov.mo:be/ws", className = "UpdateInterDrivingLicRecordDocIdResponse")
    @WebResult(name = "flag", targetNamespace = "")
    public boolean updateInterDrivingLicRecordDocId(
            @WebParam(name = "oldDocId", targetNamespace = "")
                    long oldDocId,
            @WebParam(name = "newDocId", targetNamespace = "")
                    long newDocId,
            @WebParam(name = "uid", targetNamespace = "")
                    String uid
    );

    /**
     * Get the TPMS Cert Information from the TPMS-BE
     * 				System.
     * 			
     */
    @WebMethod(action = "urn:dsat.gov.mo:be/ws/getTPMSCertInfo")
    @RequestWrapper(localName = "getTPMSCertInfo", targetNamespace = "urn:dsat.gov.mo:be/ws", className = "GetTPMSCertInfo")
    @ResponseWrapper(localName = "getTPMSCertInfoResponse", targetNamespace = "urn:dsat.gov.mo:be/ws", className = "GetTPMSCertInfoResponse")
    @WebResult(name = "record", targetNamespace = "")
    public java.util.List<TaxiDrivingLicense> getTPMSCertInfo(
            @WebParam(name = "docId", targetNamespace = "")
                    long docId,
            @WebParam(name = "status", targetNamespace = "")
                    String status
    );

    @WebMethod(action = "urn:dsat.gov.mo:be/ws/createInterLicApplicant")
    @RequestWrapper(localName = "createInterLicApplicant", targetNamespace = "urn:dsat.gov.mo:be/ws", className = "CreateInterLicApplicant")
    @ResponseWrapper(localName = "createInterLicApplicantResponse", targetNamespace = "urn:dsat.gov.mo:be/ws", className = "CreateInterLicApplicantResponse")
    @WebResult(name = "interLicAppRtn", targetNamespace = "")
    public InterLicAppRtn createInterLicApplicant(
            @WebParam(name = "interLicAppReq", targetNamespace = "")
                    InterLicAppReq interLicAppReq
    );
}
